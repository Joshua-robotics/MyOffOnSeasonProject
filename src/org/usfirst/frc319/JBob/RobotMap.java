// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc319.JBob;

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.AnalogInput;
import com.ctre.CANTalon;
import edu.wpi.first.wpilibj.Compressor;
import edu.wpi.first.wpilibj.DoubleSolenoid;
import edu.wpi.first.wpilibj.RobotDrive;

// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.livewindow.LiveWindow;

/**
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
public class RobotMap {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static CANTalon driveTrainleftDriveLead;
    public static CANTalon driveTrainrightDriveLead;
    public static RobotDrive driveTrainjoystickDrive;
    public static DoubleSolenoid driveTrainshifter;
    public static CANTalon shootershooterLead;
    public static CANTalon shootershooterFollow;
    public static CANTalon fuelVacfuelVac;
    public static DoubleSolenoid fuelVacfuelPiston;
    public static CANTalon elevatorelevatorLead;
    public static CANTalon elevatorFollowelevatorFollow;
    public static DoubleSolenoid gearVacgearPiston;
    public static CANTalon gearVacgearVacMotor;
    public static DoubleSolenoid brakePlatebrakePlatePiston;
    public static Compressor compressorcompressor;
    public static AnalogInput compressorpressureSensor;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public static void init() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        driveTrainleftDriveLead = new CANTalon(0);
        LiveWindow.addActuator("driveTrain", "leftDriveLead", driveTrainleftDriveLead);
        
        driveTrainrightDriveLead = new CANTalon(1);
        LiveWindow.addActuator("driveTrain", "rightDriveLead", driveTrainrightDriveLead);
        
        driveTrainjoystickDrive = new RobotDrive(driveTrainleftDriveLead, driveTrainrightDriveLead);
        
        driveTrainjoystickDrive.setSafetyEnabled(true);
        driveTrainjoystickDrive.setExpiration(0.1);
        driveTrainjoystickDrive.setSensitivity(0.5);
        driveTrainjoystickDrive.setMaxOutput(1.0);

        driveTrainjoystickDrive.setInvertedMotor(RobotDrive.MotorType.kRearRight, true);
        driveTrainshifter = new DoubleSolenoid(0, 0, 1);
        LiveWindow.addActuator("driveTrain", "shifter", driveTrainshifter);
        
        shootershooterLead = new CANTalon(2);
        LiveWindow.addActuator("shooter", "shooterLead", shootershooterLead);
        
        shootershooterFollow = new CANTalon(3);
        LiveWindow.addActuator("shooter", "shooterFollow", shootershooterFollow);
        
        fuelVacfuelVac = new CANTalon(4);
        LiveWindow.addActuator("fuelVac", "fuelVac", fuelVacfuelVac);
        
        fuelVacfuelPiston = new DoubleSolenoid(0, 2, 3);
        LiveWindow.addActuator("fuelVac", "fuelPiston", fuelVacfuelPiston);
        
        elevatorelevatorLead = new CANTalon(5);
        LiveWindow.addActuator("elevator", "elevatorLead", elevatorelevatorLead);
        
        elevatorFollowelevatorFollow = new CANTalon(6);
        LiveWindow.addActuator("elevator", "elevatorFollow", elevatorFollowelevatorFollow);
        
        gearVacgearPiston = new DoubleSolenoid(0, 4, 5);
        LiveWindow.addActuator("gearVac", "gearPiston", gearVacgearPiston);
        
        gearVacgearVacMotor = new CANTalon(7);
        LiveWindow.addActuator("gearVac", "gearVacMotor", gearVacgearVacMotor);
        
        brakePlatebrakePlatePiston = new DoubleSolenoid(0, 6, 7);
        LiveWindow.addActuator("brakePlate", "brakePlatePiston", brakePlatebrakePlatePiston);
        
        
        compressorcompressor = new Compressor(0);
        
        
        compressorpressureSensor = new AnalogInput(0);
        LiveWindow.addSensor("compressor", "pressureSensor", compressorpressureSensor);
        

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }
}
